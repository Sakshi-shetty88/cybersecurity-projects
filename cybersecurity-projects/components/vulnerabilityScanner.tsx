import React, { useState, useEffect } from 'react';
import { 
  Terminal, 
  Play, 
  Shield, 
  Target, 
  AlertTriangle, 
  CheckCircle, 
  Clock,
  Network,
  Search,
  FileText,
  Download
} from 'lucide-react';

const VulnerabilityScanner = () => {
  const [currentScan, setCurrentScan] = useState('');
  const [scanResults, setScanResults] = useState<any[]>([]);
  const [isScanning, setIsScanning] = useState(false);
  const [scanProgress, setScanProgress] = useState(0);
  const [selectedTarget, setSelectedTarget] = useState('192.168.1.100');

  const scanCommands = {
    'Host Discovery': {
      command: 'nmap -sn 192.168.1.0/24',
      description: 'Discover live hosts on the network',
      results: [
        { host: '192.168.1.1', status: 'up', latency: '1.2ms', mac: 'AA:BB:CC:DD:EE:FF' },
        { host: '192.168.1.100', status: 'up', latency: '0.8ms', mac: '11:22:33:44:55:66' },
        { host: '192.168.1.105', status: 'up', latency: '2.1ms', mac: '77:88:99:AA:BB:CC' }
      ]
    },
    'Port Scan': {
      command: 'nmap -sS -p- 192.168.1.100',
      description: 'TCP SYN scan of all ports',
      results: [
        { port: 22, service: 'SSH', state: 'open', version: 'OpenSSH 7.4' },
        { port: 80, service: 'HTTP', state: 'open', version: 'Apache 2.4.6' },
        { port: 443, service: 'HTTPS', state: 'open', version: 'Apache 2.4.6' },
        { port: 3306, service: 'MySQL', state: 'open', version: 'MySQL 5.7.33' },
        { port: 21, service: 'FTP', state: 'open', version: 'vsftpd 3.0.2' }
      ]
    },
    'Vulnerability Scan': {
      command: 'nmap --script vuln 192.168.1.100',
      description: 'Check for known vulnerabilities',
      results: [
        { 
          vuln: 'CVE-2014-6271', 
          severity: 'HIGH', 
          service: 'HTTP (80)', 
          description: 'Shellshock vulnerability in CGI scripts',
          cvss: 9.8
        },
        { 
          vuln: 'CVE-2017-7494', 
          severity: 'MEDIUM', 
          service: 'SSH (22)', 
          description: 'Weak SSH configuration allowing brute force',
          cvss: 6.5
        },
        { 
          vuln: 'CVE-2016-10033', 
          severity: 'HIGH', 
          service: 'HTTP (80)', 
          description: 'PHPMailer remote code execution',
          cvss: 8.1
        }
      ]
    },
    'Service Detection': {
      command: 'nmap -sV -sC 192.168.1.100',
      description: 'Detect service versions and run default scripts',
      results: [
        { 
          port: 80, 
          service: 'Apache httpd 2.4.6',
          scripts: ['http-title: Welcome to Metasploitable', 'http-methods: GET HEAD POST'],
          headers: ['Server: Apache/2.4.6', 'X-Powered-By: PHP/5.6.40']
        },
        { 
          port: 22, 
          service: 'OpenSSH 7.4',
          scripts: ['ssh-hostkey: 2048 aa:bb:cc:dd:ee:ff', 'ssh-auth-methods: password,publickey'],
          headers: ['Protocol: 2.0']
        }
      ]
    }
  };

  const runScan = async (scanType: string) => {
    setCurrentScan(scanType);
    setIsScanning(true);
    setScanProgress(0);
    setScanResults([]);

    // Simulate scanning progress
    for (let i = 0; i <= 100; i += 10) {
      await new Promise(resolve => setTimeout(resolve, 200));
      setScanProgress(i);
    }

    // Set results
    setScanResults(scanCommands[scanType as keyof typeof scanCommands].results);
    setIsScanning(false);
  };

  const generateReport = () => {
    const report = {
      timestamp: new Date().toISOString(),
      target: selectedTarget,
      scans: scanResults,
      summary: `Vulnerability scan completed on ${selectedTarget}`
    };
    
    const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `vuln-scan-${selectedTarget}-${Date.now()}.json`;
    a.click();
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="bg-slate-800/50 rounded-2xl p-6 border border-slate-700/50 mb-8">
          <div className="flex items-center gap-4 mb-4">
            <div className="p-3 bg-red-600/20 rounded-xl border border-red-500/30">
              <Shield className="w-8 h-8 text-red-400" />
            </div>
            <div>
              <h1 className="text-3xl font-bold">Vulnerability Scanner Simulator</h1>
              <p className="text-slate-300">Interactive Nmap-style scanning tool</p>
            </div>
          </div>
          
          <div className="flex items-center gap-4">
            <div className="flex items-center gap-2">
              <Target className="w-5 h-5 text-blue-400" />
              <span className="text-sm text-slate-400">Target:</span>
              <input
                type="text"
                value={selectedTarget}
                onChange={(e) => setSelectedTarget(e.target.value)}
                className="bg-slate-700/50 border border-slate-600 rounded px-3 py-1 text-sm"
              />
            </div>
            <div className="flex items-center gap-2 text-sm text-slate-400">
              <Network className="w-4 h-4" />
              Status: <span className="text-green-